{"version":3,"sources":["components/layout/Navbar.js","customhooks/useInput.js","components/home/Form.js","store/actions/noteAction.js","components/notes/Note.js","components/notes/NotesList.js","components/home/Home.js","components/notes/FavoriteList.js","components/notes/NoteDetails.js","components/notes/EditNote.js","App.js","reportWebVitals.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Navbar","className","to","id","useInput","initialValue","useState","value","setValue","reset","bind","onChange","e","target","Form","title","bindTitle","resetTitle","content","bindContent","resetContent","dispatch","useDispatch","onSubmit","notes","preventDefault","getState","getFirestore","collection","add","favorite","createdAt","Date","then","console","log","catch","err","alert","type","htmlFor","Note","note","heartMarkUp","style","cursor","onClick","favStatus","doc","update","toggleFavorite","delete","deleteNote","moment","toDate","fromNow","payload","NotesList","map","Home","useFirestoreConnect","orderBy","useSelector","state","firestore","ordered","FavoriteList","where","storeAs","favoriteNotes","temp","NoteDetails","props","noteId","match","params","data","isLoaded","isEmpty","calendar","EditNote","history","useHistory","updateNote","push","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","noteToEdit","noteReducer","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6aa40ab.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n        return (\r\n                <nav className='green nav-container'>\r\n                        <div className=\"nav-wrapper custom-nav\">\r\n                                <Link to=\"/\" className=\"brand-logo nav-button\">My-notebook</Link>\r\n                                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                                        <li><NavLink to=\"/favorites\" className='fav-button'>favorites</NavLink></li>\r\n                                </ul>\r\n                        </div>\r\n                </nav>\r\n        )\r\n}\r\n\r\nexport default Navbar\r\n","import { useState } from \"react\"\r\n\r\nconst useInput = (initialValue = '') => {\r\n        const [value, setValue] = useState(initialValue);\r\n\r\n        const reset = () => {\r\n                setValue(initialValue);\r\n        }\r\n\r\n        const bind = {\r\n                value,\r\n                onChange: (e) => {\r\n                        setValue(e.target.value);\r\n                }\r\n        }\r\n\r\n        return [value, bind, reset]\r\n}\r\n\r\nexport default useInput;","import React from 'react'\r\nimport useInput from '../../customhooks/useInput'\r\nimport { addNote } from '../../store/actions/noteAction';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Form = () => {\r\n        const [title, bindTitle, resetTitle] = useInput();\r\n        const [content, bindContent, resetContent] = useInput();\r\n        const dispatch = useDispatch();\r\n\r\n        const submitHandler = (e) => {\r\n                e.preventDefault();\r\n                if (title && content) {\r\n                        dispatch(addNote({ title, content }))\r\n                        resetContent();\r\n                        resetTitle();\r\n                }\r\n                else if (title)\r\n                        alert('content is empty!');\r\n                else\r\n                        alert('title is empty!')\r\n        }\r\n\r\n        return (\r\n                <div className='section flex'>\r\n                        <form onSubmit={submitHandler} className='white custom-card'>\r\n                                <h5 className=\"dark-text\"><u>New Note</u></h5>\r\n                                <div className=\"input-field\">\r\n                                        <input id=\"note-title\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                                        <label className=\"active\" htmlFor=\"note-title\">Note Title</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                        <textarea id=\"note-content\" className=\"materialize-textarea\" {...bindContent} ></textarea>\r\n                                        <label className='active' htmlFor=\"note-content\">Note Content</label>\r\n                                </div>\r\n                                <button className=\"btn green custom-button\">Add</button>\r\n                        </form>\r\n\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Form\r\n","export const addNote = (notes) => {\r\n        return (dispatch, getState, { getFirestore }) => {\r\n                const firestore = getFirestore();\r\n                firestore.collection('notes')\r\n                        .add({\r\n                                ...notes,\r\n                                favorite: false,\r\n                                createdAt: new Date()\r\n                        })\r\n                        .then(() => {\r\n                                console.log('note added');\r\n                        })\r\n                        .catch(err => {\r\n                                console.log(err);\r\n                        })\r\n        }\r\n}\r\nexport const deleteNote = (note) => {\r\n        return (dispatch, getState, { getFirestore }) => {\r\n                const firestore = getFirestore();\r\n                firestore.collection('notes').doc(note.id).delete()\r\n                        .then(() => {\r\n                                console.log('note deleted');\r\n                        })\r\n                        .catch(err => {\r\n                                console.log(err);\r\n                        })\r\n        }\r\n}\r\nexport const toggleFavorite = (note) => {\r\n        return (dispatch, getState, { getFirestore }) => {\r\n                const favStatus = !note.favorite;\r\n                const firestore = getFirestore()\r\n                firestore.collection('notes').doc(note.id).update({\r\n                        favorite: favStatus\r\n                })\r\n                        .then(() => {\r\n                                console.log('note updated');\r\n                        })\r\n                        .catch(err => {\r\n                                console.log(err);\r\n                        })\r\n        }\r\n}\r\nexport const updateNote = (note) => {\r\n        return (dispatch, getState, { getFirestore }) => {\r\n                const firestore = getFirestore()\r\n                firestore.collection('notes').doc(note.id).update({\r\n                        title: note.title,\r\n                        content: note.content\r\n                })\r\n                        .then(() => {\r\n                                console.log('note updated');\r\n                        })\r\n                        .catch(err => {\r\n                                console.log(err);\r\n                        })\r\n        }\r\n}","import React from 'react'\r\nimport { deleteNote, toggleFavorite } from '../../store/actions/noteAction'\r\nimport { useDispatch } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Note = ({ note }) => {\r\n        const dispatch = useDispatch();\r\n        const deleteNoteHandler = () => {\r\n                dispatch(deleteNote(note))\r\n        }\r\n        const toggleFavoriteHandler = () => {\r\n                dispatch(toggleFavorite(note))\r\n        }\r\n        const editNoteHandler = () => {\r\n                dispatch({ type: 'editNote', payload: note })\r\n        }\r\n        const heartMarkUp = note.favorite ? 'favorite' : 'favorite_border';\r\n\r\n        return (\r\n                <div className='note white custom-note'>\r\n                        <div className=\"right-align\">\r\n                                <i className=\"material-icons red-text\" style={{ cursor: 'pointer' }} onClick={toggleFavoriteHandler}>{heartMarkUp}</i>\r\n                                <i className=\"material-icons\" style={{ cursor: 'pointer' }} onClick={deleteNoteHandler}>delete</i>\r\n                        </div>\r\n                        <Link to={'/note/' + note.id}>\r\n                                <h5 className=\"custom-title\">{note.title}</h5>\r\n                        </Link>\r\n                        <p className=\"truncate\">{note.content} </p>\r\n                        <p className=\"grey-text\">{moment(note.createdAt.toDate()).fromNow()} </p>\r\n                        <Link to={`/editnote/${note.id}`}>\r\n                                <div className=\"right-align\"><i className=\"material-icons black-text\" onClick={editNoteHandler}>edit</i></div>\r\n                        </Link>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport Note from './Note'\r\n\r\nconst NotesList = ({ notes, title }) => {\r\n        return (\r\n                <div className='custom-list'>\r\n                        <center className='custom-heading-note-list'><u>{title ? title : 'Note List'}</u></center>\r\n                        {notes && notes.map(note => <Note note={note} key={note.id} />)}\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react'\r\nimport Form from './Form'\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport NotesList from '../notes/NotesList';\r\n\r\nconst Home = () => {\r\n        useFirestoreConnect([{ collection: 'notes', orderBy: ['createdAt', 'desc'] }]);\r\n        const notes = useSelector(state => state.firestore.ordered.notes);\r\n        return (\r\n                <div className='container custom-home'>\r\n                        <div className='row center-align flex-box'>\r\n                                <div className=\"col s7\"> <Form /> </div>\r\n                                <div className=\"col s5\"><NotesList notes={notes} /> </div>\r\n                        </div>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\nimport NotesList from './NotesList'\r\n\r\nconst FavoriteList = () => {\r\n        useFirestoreConnect([{ collection: 'notes', where: ['favorite', '==', true], orderBy: ['createdAt', 'desc'], storeAs: 'favoriteNotes' }])\r\n        const favoriteNotes = useSelector(state => state.firestore.ordered.favoriteNotes)\r\n        const temp = useSelector(state => state.firestore)\r\n        console.log(temp)\r\n        return (\r\n                <NotesList notes={favoriteNotes} title={'Favorites'} />\r\n        )\r\n}\r\n\r\nexport default FavoriteList\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\r\nimport moment from 'moment';\r\n\r\nconst NoteDetails = (props) => {\r\n        const noteId = props.match.params.id;\r\n        useFirestoreConnect([{ collection: 'notes', doc: noteId }]);\r\n        const note = useSelector(({ firestore: { data } }) => data.notes && data.notes[noteId])\r\n\r\n        const noteMarkUp = !isLoaded(note) ? (\r\n                <div className='container section'>\r\n                        <div className=\"card z-depth-0\">\r\n                                <div className=\"card-content custom-note-detail\">\r\n                                        <span className=\"card-title\">Loading...</span>\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        ) : (isEmpty(note) ? (\r\n                <div className='container section'>\r\n                        <div className=\"card z-depth-0\">\r\n                                <div className=\"card-content custom-note-detail\">\r\n                                        <span className=\"card-title\">The note content is empty!</span>\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        ) : (\r\n                <div className='container section'>\r\n                        <div className=\"card z-depth-0\">\r\n                                <div className=\"card-content custom-note-detail\">\r\n                                        <span className=\"card-title\">{note?.title}</span>\r\n                                        <p className=\"card-content\">{note?.content}</p>\r\n                                        <div className=\"card-action grey grey-text lighten-4\">\r\n                                                <div>{moment(note?.createdAt.toDate()).calendar()}</div>\r\n                                        </div>\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        ))\r\n\r\n        return noteMarkUp\r\n}\r\n\r\nexport default NoteDetails\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateNote } from '../../store/actions/noteAction'\r\nimport useInput from '../../customhooks/useInput'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst EditNote = () => {\r\n        const note = useSelector(state => state.note)\r\n        const [title, bindTitle, resetTitle] = useInput(note.title);\r\n        const [content, bindContent, resetContent] = useInput(note.content);\r\n        const dispatch = useDispatch()\r\n        const history = useHistory()\r\n\r\n        const submitHandler = (e) => {\r\n                e.preventDefault();\r\n                if (title && content) {\r\n                        dispatch(updateNote({ id: note.id, title, content }))\r\n                        resetContent();\r\n                        resetTitle();\r\n                        history.push('/')\r\n                }\r\n                else if (title)\r\n                        alert('content is empty!');\r\n                else\r\n                        alert('title is empty!')\r\n        }\r\n\r\n        return (\r\n                <div className='section'>\r\n                        <form onSubmit={submitHandler} className='white'>\r\n                                <h5 className=\"dark-text\">Note Content</h5>\r\n                                <div className=\"input-field\">\r\n                                        <input id=\"note-title\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                                        <label className=\"active\" htmlFor=\"note-title\">Note Title</label>\r\n                                </div>\r\n                                <div className=\"input-field\">\r\n                                        <textarea id=\"note-content\" className=\"materialize-textarea\" {...bindContent} ></textarea>\r\n                                        <label className='active' htmlFor=\"note-content\">Note Content</label>\r\n                                </div>\r\n                                <button className=\"btn green\">Update</button>\r\n                        </form>\r\n\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default EditNote\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/home/Home';\nimport FavoriteList from './components/notes/FavoriteList';\nimport NoteDetails from './components/notes/NoteDetails';\nimport EditNote from './components/notes/EditNote';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/favorites' component={FavoriteList} />\n        <Route path='/note/:id' component={NoteDetails} />\n        <Route path='/editnote/:id' component={EditNote} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n        noteToEdit: {}\r\n}\r\n\r\nconst noteReducer = (state = initialState, { type, payload }) => {\r\n        switch (type) {\r\n\r\n                case 'editNote':\r\n                        return payload\r\n\r\n                default:\r\n                        return state\r\n        }\r\n}\r\n\r\nexport default noteReducer","import { combineReducers } from \"redux\"\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport noteReducer from \"./noteReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n        note: noteReducer,\r\n        firebase: firebaseReducer,\r\n        firestore: firestoreReducer // <- needed if using firestore\r\n})\r\n\r\nexport default rootReducer","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n        apiKey: \"AIzaSyDcV2BKOK_ANc0cJJYo6Emr2IDT9eYfu-E\",\r\n        authDomain: \"my-note-app-1.firebaseapp.com\",\r\n        projectId: \"my-note-app-1\",\r\n        storageBucket: \"my-note-app-1.appspot.com\",\r\n        messagingSenderId: \"382176870811\",\r\n        appId: \"1:382176870811:web:34571948e5e88c2496613e\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\"\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n} from \"react-redux-firebase\"\nimport fbConfig from './config/fbConfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n  reduxFirestore(fbConfig)\n),\n)\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}